// XConf WebConfig Configuration File
// ==================================
//
// This configuration file contains all the settings required to run the XConf WebConfig service.
// XConf WebConfig is a configuration management system for RDK devices.
//
// Configuration sections:
// - Application metadata and build information
// - Server settings (port, timeouts, metrics)
// - Logging configuration
// - Tracing and observability
// - External service connections
// - Database connection settings
// - Feature toggles and core logic
//
// Environment Variables:
// - SAT_CLIENT_ID: Client ID for SAT authentication
// - SAT_CLIENT_SECRET: Client secret for SAT authentication
// - SECURITY_TOKEN_KEY: Security token key for JWT validation
// - DATABASE_USER: Cassandra DB username
// - DATABASE_PASSWORD: Cassandra DB password
//
// Usage:
// bin/xconfwebconfig-linux-amd64 -f /path/to/sample_xconfwebconfig.conf
//

xconfwebconfig {

    // =============================
    // APPLICATION METADATA & BUILD INFO
    // =============================
    code_git_commit = "2ac7ff4"                    // Git commit hash of the source code
    build_time = "Thu Feb 14 01:57:26 2019 UTC"    // Timestamp when the application was built
    token_api_enabled = true                       // Enable/disable token-based API authentication
    ProjectName = "xconfwebconfig-dataservice"     // Project identifier
    ProjectVersion = "3.6.6-SNAPSHOT"              // Current version of the application
    ServiceName = "N/A"                            // Service name (set during deployment)
    ServiceVersion = "N/A"                         // Service version (set during deployment)
    Source = "N/A"                                 // Source identifier
    Rev = "N/A"                                    // Revision number
    GitBranch = "develop"                          // Git branch used for build
    GitBuildTime = "6/2/2021 4:16 PM"              // Git build timestamp
    GitCommitId = "18f6608a1a8135d719336d09d05c296d4f5e655b"  // Full Git commit ID
    GitCommitTime = "Tue May 18 16:26:18 2021 +0000"          // Git commit timestamp

    // =============================
    // TRACING & OBSERVABILITY
    // =============================
    tracing {
        moracide_tag_prefix = "X-Cl-Experiment"    // Prefix for experiment tags in headers
        otel {
            enabled = true                        // Enable/disable OpenTelemetry tracing
            endpoint = "127.0.0.1:4318"           // OTEL collector endpoint (HTTP)
            operation_name = "http.request"
            // Allowed values; noop, stdout and http
            // provider=http will push it to the endpoint
            // otel collector should be running at the endpoint
            provider = "http"                     // Tracing provider type: noop, stdout, http
        }
    }

    // =============================
    // SERVER CONFIGURATION
    // =============================
    server {
        port = 9000                               // HTTP server port
        read_timeout_in_secs = 5                  // Maximum time to read request (seconds)
        write_timeout_in_secs = 50                // Maximum time to write response (seconds)
        metrics_enabled = true                    // Enable Prometheus metrics endpoint (/metrics)
    }

    // =============================
    // LOGGING CONFIGURATION
    // =============================
    log {
        level = "debug"                           // Log level: debug, info, warn, error, fatal
        format = "text"                           // Log format: text, json
        file = ""                                 // Log file path (empty = stdout)
    }

    // =============================
    // EXTERNAL SERVICE CONFIGURATIONS
    // =============================

    // SAT Service - Security Access Token service for authentication
    sat_service {
        retries = 3                               // Number of retry attempts on failure
        retry_in_msecs = 100                      // Delay between retries (milliseconds)
        connect_timeout_in_secs = 4               // Connection timeout (seconds)
        read_timeout_in_secs = 141                // Read timeout (seconds)
        max_idle_conns = 0                        // Max idle connections (0 = unlimited)
        max_idle_conns_per_host = 100             // Max idle connections per host
        keepalive_timeout_in_secs = 30            // TCP keepalive timeout (seconds)
        host = "https://sat_service.net"          // SAT service base URL
        client_id = "$SAT_CLIENT_ID"              // SAT client ID (from env)
        client_secret = "$SAT_CLIENT_SECRET"      // SAT client secret (from env)
    }
    
    // SAT Consumer - Token validation service
    sat_consumer {
        consumer_host = "https://sat_service_validation.net"  // Token validation endpoint
    }

    // Device Service - Device information and management
    device_service {
        retries = 0                               // Number of retry attempts on failure
        retry_in_msecs = 100                      // Delay between retries (milliseconds)
        connect_timeout_in_secs = 2               // Connection timeout (seconds)
        read_timeout_in_secs = 142                // Read timeout (seconds)
        max_idle_conns = 0                        // Max idle connections (0 = unlimited)
        max_idle_conns_per_host = 100             // Max idle connections per host
        keepalive_timeout_in_secs = 30            // TCP keepalive timeout (seconds)
        host = "https://device_service.net"       // Device service base URL
    }

    // Account Service - User account management and validation
    account_service {
        retries = 0                               // Number of retry attempts on failure
        retry_in_msecs = 100                      // Delay between retries (milliseconds)
        connect_timeout_in_secs = 2               // Connection timeout (seconds)
        read_timeout_in_secs = 142                // Read timeout (seconds)
        max_idle_conns = 0                        // Max idle connections (0 = unlimited)
        max_idle_conns_per_host = 100             // Max idle connections per host
        keepalive_timeout_in_secs = 30            // TCP keepalive timeout (seconds)
        host = "https://account_service.net"      // Account service base URL
    }

    // Tagging Service - Device and configuration tagging management
    tagging_service {
        retries = 0                               // Number of retry attempts on failure
        retry_in_msecs = 100                      // Delay between retries (milliseconds)
        connect_timeout_in_secs = 2               // Connection timeout (seconds)
        read_timeout_in_secs = 142                // Read timeout (seconds)
        max_idle_conns = 0                        // Max idle connections (0 = unlimited)
        max_idle_conns_per_host = 100             // Max idle connections per host
        keepalive_timeout_in_secs = 30            // TCP keepalive timeout (seconds)
        host = "https://tagging_service.net/DataService" // Tagging service base URL
    }

    // Group Service - Device grouping and management
    group_service {
        cache_enabled = true                      // Enable/disable group service cache
        cache_expire_after_access_in_mins = 240   // Cache expiry time after access (minutes)
        cache_refresh_after_write_in_mins = 240   // Cache refresh time after write (minutes)
        retries = 0                               // Number of retry attempts on failure
        retry_in_msecs = 100                      // Delay between retries (milliseconds)
        connect_timeout_in_secs = 2               // Connection timeout (seconds)
        read_timeout_in_secs = 142                // Read timeout (seconds)
        max_idle_conns = 0                        // Max idle connections (0 = unlimited)
        max_idle_conns_per_host = 100             // Max idle connections per host
        keepalive_timeout_in_secs = 30            // TCP keepalive timeout (seconds)
        host = "https://group_service_testing.net" // Group service base URL
    }

    // Group Sync Service - Group synchronization between systems
    group_sync_service {
        retries = 0                               // Number of retry attempts on failure
        retry_in_msecs = 100                      // Delay between retries (milliseconds)
        connect_timeout_in_secs = 2               // Connection timeout (seconds)
        read_timeout_in_secs = 30                 // Read timeout (seconds)
        max_idle_conns_per_host = 100             // Max idle connections per host
        keepalive_timeout_in_secs = 30            // TCP keepalive timeout (seconds)
        host = "https://group_sync_service_testing.net" // Group sync service base URL
        path = "/v2/grouping"                     // API path for group sync
        security_token_path = "/v2/secure"        // API path for security token validation
    }

    // =============================
    // SAT REFRESH SETTINGS
    // =============================
    sat {
        SAT_REFRESH_FREQUENCY_IN_HOUR = 6         // How often to refresh SAT tokens (hours)
        SAT_REFRESH_BUFFER_IN_MINS = 15           // Buffer time before token expiry (minutes)
    }

    // =============================
    // XCONF CORE CONFIGURATION
    // =============================
    xconf {
        sat_service_name = sat_service                       // Reference to SAT service config section
        account_service_name = account_service               // Reference to account service config section
        device_service_name = device_service                 // Reference to device service config section
        tagging_service_name = tagging_service               // Reference to tagging service config section
        group_service_name = group_service                   // Reference to group service config section
        group_sync_service_name = group_sync_service         // Reference to group sync service config section
        derive_application_type_from_partner_id = true       // Derive application type from partner ID
        partner_application_types = [ "" ]                   // List of partner application types
        enable_fw_penetration_metrics = false                // Enable firmware penetration metrics
        enable_rfc_penetration_metrics = false               // Enable RFC penetration metrics
        enable_device_service = false                        // Enable device service integration
        enable_account_service = false                       // Enable account service integration
        enable_tagging_service = false                       // Enable tagging service integration
        enable_device_db_lookup = false                      // Enable device DB lookup
        enable_group_service = false                         // Enable group service integration
        enable_ft_xdp_groups = false                         // Enable XDP groups feature toggle
        enable_ft_mac_tags = false                           // Enable MAC tags feature toggle
        enable_ft_account_tags = false                       // Enable account tags feature toggle
        enable_ft_partner_tags = false                       // Enable partner tags feature toggle
        enable_mac_accountservice_call = false               // Enable MAC account service call
        account_service_mac_prefix = ""                      // MAC prefix for account service
        enable_tagging_service_rfc = false                   // Enable tagging service for RFC
        enable_fw_download_logs = true                       // Enable firmware download logs
        enable_rfc_precook = false                           // Enable RFC precook feature
        enable_rfc_precook_304 = false                       // Enable RFC precook 304 status
        enable_rfc_precook_for_offered_fw = false            // Enable RFC precook for offered firmware
        ipv4_network_mask_prefix_length = 24                 // IPv4 network mask prefix length
        ipv6_network_mask_prefix_length = 64                 // IPv6 network mask prefix length
        rfc_precook_time_zone = "America/New_York"           // Time zone for RFC precook
        rfc_precook_time_format = "15:04"                    // Time format for RFC precook
        rfc_precook_start_time = "18:00"                     // RFC precook start time
        rfc_precook_end_time = "06:00"                       // RFC precook end time
        group_service_model_list = ""                        // List of models for group service
        group_prefix = ""                                    // Prefix for group names
        mac_tags_model_list = ""                             // List of models for MAC tags
        account_tags_model_list = ""                         // List of models for account tags
        partner_tags_model_list = ""                         // List of models for partner tags
        mac_tags_prefix_list = "t_"                          // Prefix list for MAC tags
        account_tags_prefix_list = "t_;p_"                   // Prefix list for account tags
        partner_tags_prefix_list = "t_"                      // Prefix list for partner tags
        return_account_id = true                             // Return account ID in responses
        return_account_hash = true                           // Return account hash in responses
        estb_recovery_firmware_versions = ".* .*"            // Regex for recovery firmware versions
        dataservice_enabled = true                           // Enable data service API
        adminservice_enabled = true                          // Enable admin service API

        // Cache Configuration
        cache_tickDuration = 60000                           // Cache tick duration (milliseconds)
        cache_retryCountUntilFullRefresh = 10                // Retry count before full cache refresh
        cache_changedKeysTimeWindowSize = 900000             // Changed keys time window (milliseconds)
        cache_reloadCacheEntries = false                     // Enable cache entry reloading
        cache_reloadCacheEntriesTimeout = 1                  // Cache reload timeout
        cache_reloadCacheEntriesTimeUnit = "DAYS"            // Cache reload timeout unit
        cache_numberOfEntriesToProcessSequentially = 10000   // Sequential processing limit
        cache_keysetChunkSizeForMassCacheLoad = 500          // Chunk size for mass cache loading
        cache_update_window_size = 60000                     // Cache update window (milliseconds)
        cache_clone_data_enabled = false                     // Enable cache data cloning

        ipaddr_shorthand_parsing_enabled = true              // Enable IP address shorthand parsing
        evaluator_nslist_loading_cache_enabled = false       // Enable evaluator namespace cache
        application_cache_enabled = false                    // Enable application cache
        metrics_model_requests_counter_enabled = true        // Enable metrics for model requests
        metrics_allowed_model_labels = ""                    // Allowed model labels for metrics

        security_token_key = "$SECURITY_TOKEN_KEY"           // Security token key (from environment variable)
        security_token_manager_enabled = false               // Enable security token manager
        skip_security_token_client_protocol_set = "mtls;mtls-recovery" // Protocols to skip for security token client
        security_token_model_set = ""                        // Model set for security token
        security_token_device_percent_enabled = false        // Enable device percent for security token
        security_token_device_percent_value = 100            // Device percent value for security token
        security_token_hash_enabled = true                   // Enable hashing for security token
        security_token_group_service_enabled = false         // Enable group service for security token

        auxiliary_extensions = "additionalFw:.bin;remCtrl:.tgz" // Auxiliary file extensions
        rfc_return_country_code = true                       // Return country code in RFC responses
        rfc_country_code_model_list = ""                     // Model list for country code in RFC
        rfc_country_code_partner_list = ""                   // Partner list for country code in RFC

        last_estb_ip_source = ""                            // Source for last ESTB IP
        partner_id_validation_enabled = true                // Enable partner ID validation
        valid_partner_id_regex = "^[A-Za-z0-9_.\\-,:;]{3,32}$" // Regex for valid partner IDs

        distributed_lock_retries = 0                        // Number of retry attempts on failure
        distributed_lock_retry_in_msecs = 200               // Delay between retries (milliseconds)
    }

    // =============================
    // HTTP CLIENT CERTIFICATES
    // =============================
    http_client {
        enable_cert_validation = false                        // Enable/disable TLS certificate validation
        ca_comodo_cert_file = "/etc/testpath/test_cert.crt"   // Path to CA certificate file (PEM format)
        cert_file = "/etc/testpath/test.pem"                  // Path to client certificate file (PEM format)
        private_key_file = "/etc/testpath/test_client.pem"    // Path to client private key file (PEM format)
    }

    // =============================
    // DATABASE CONFIGURATION
    // =============================
    database {
        hosts = [
            "127.0.0.1"
        ]                                                     // List of Cassandra DB hosts
        keyspace = "ApplicationsDiscoveryDataService"         // Main Cassandra keyspace
        test_keyspace = "test_appds"                          // Test keyspace for Cassandra
        device_keyspace = "odp"                               // Device keyspace for Cassandra
        device_test_keyspace = "odp_test_keyspace"            // Device test keyspace
        device_pod_table_name = "test_account"                // Table name for device pod
        xpc_keyspace = "test"                                 // XPC keyspace
        xpc_test_keyspace = "test_keyspace"                   // XPC test keyspace
        xpc_precook_table_name = "reference_document"         // Table name for XPC precook
        xconf_recooking_status_table_name = "RecookingStatus" // Table name for recooking status
        protocolversion = 4                                   // Cassandra protocol version
        xconf_test_keyspace = "test_appds"                    // XConf test keyspace
        user = "$DATABASE_USER"                               // Cassandra DB username (from env)
        password = "$DATABASE_PASSWORD"                       // Cassandra DB password (from env)
        // use password OR encrypted_password for Cassandra creds
        // encrypted_password = "$DATABASE_ENCRYPTED_PASSWORD" // Cassandra encrypted password (optional)
        is_ssl_enabled = false                                // Enable SSL for Cassandra connection
        timeout_in_sec = 5                                    // Cassandra query timeout (seconds)
        connect_timeout_in_sec = 5                            // Cassandra connection timeout (seconds)
        concurrent_queries = 5                                // Number of concurrent queries
        connections = 5                                       // Number of DB connections
        local_dc = ""                                         // Local datacenter name (for multi-DC clusters)
    }

    // =============================
    // MISCELLANEOUS
    // =============================
    misc {
        // Stuff that does not fall into any of the categories above
        use_map_for_evaluators = false                        // Use map for evaluator lookup instead of array
    }
}
