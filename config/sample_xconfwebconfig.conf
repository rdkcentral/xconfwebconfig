xconfwebconfig {
    // build info
    code_git_commit = "2ac7ff4" // Git commit hash for this build
    build_time = "Thu Feb 14 01:57:26 2019 UTC" // Build timestamp
    token_api_enabled = true // Enable token-based API authentication
    ProjectName = "xconfwebconfig-dataservice" // Project name
    ProjectVersion = "3.6.6-SNAPSHOT" // Project version
    ServiceName = "N/A" // Service name (not used)
    ServiceVersion = "N/A" // Service version (not used)
    Source = "N/A" // Source info (not used)
    Rev = "N/A" // Revision info (not used)
    GitBranch = "develop" // Git branch name
    GitBuildTime = "6/2/2021 4:16 PM" // Git build time
    GitCommitId = "18f6608a1a8135d719336d09d05c296d4f5e655b" // Full git commit ID
    GitCommitTime = "Tue May 18 16:26:18 2021 +0000" // Commit timestamp

    tracing {
        moracide_tag_prefix = "X-Cl-Experiment" // Prefix for tracing tags
        otel {
            enabled = true // Enable OpenTelemetry tracing
            endpoint = "127.0.0.1:4318" // OpenTelemetry collector endpoint
            operation_name = "http.request" // Name for traced operations
            provider = "http" // Tracing provider type
        }
    }

    server {
        port = 9000 // HTTP server port
        read_timeout_in_secs = 5 // Read timeout for requests
        write_timeout_in_secs = 50 // Write timeout for responses
        metrics_enabled = true // Enable metrics collection
    }

    log {
        level = "debug" // Logging level (debug/info/error)
        format = "text" // Log output format
        file = "" // Log file path (empty for stdout)
    }

    sat_service {
        retries = 3 // Number of retry attempts
        retry_in_msecs = 100 // Milliseconds between retries
        connect_timeout_in_secs = 4 // Connection timeout
        read_timeout_in_secs = 141 // Read timeout
        max_idle_conns = 0 // Max idle connections
        max_idle_conns_per_host = 100 // Max idle connections per host
        keepalive_timeout_in_secs = 30 // Keepalive timeout
        host = "https://sat_service.net" // SAT service endpoint
        client_id = "$SAT_CLIENT_ID" // SAT client ID (from env)
        client_secret = "$SAT_CLIENT_SECRET" // SAT client secret (from env)
    }
    
    sat_consumer {
        consumer_host = "https://sat_service_validation.net" // SAT consumer validation endpoint
    }

    device_service {
        retries = 0 // Number of retry attempts
        retry_in_msecs = 100 // Milliseconds between retries
        connect_timeout_in_secs = 2 // Connection timeout
        read_timeout_in_secs = 142 // Read timeout
        max_idle_conns = 0 // Max idle connections
        max_idle_conns_per_host = 100 // Max idle connections per host
        keepalive_timeout_in_secs = 30 // Keepalive timeout
        host = "https://device_service.net" // Device service endpoint
    }

    account_service {
        retries = 0 // Number of retry attempts
        retry_in_msecs = 100 // Milliseconds between retries
        connect_timeout_in_secs = 2 // Connection timeout
        read_timeout_in_secs = 142 // Read timeout
        max_idle_conns = 0 // Max idle connections
        max_idle_conns_per_host = 100 // Max idle connections per host
        keepalive_timeout_in_secs = 30 // Keepalive timeout
        host = "https://account_service.net" // Account service endpoint
    }

    tagging_service {
        retries = 0 // Number of retry attempts
        retry_in_msecs = 100 // Milliseconds between retries
        connect_timeout_in_secs = 2 // Connection timeout
        read_timeout_in_secs = 142 // Read timeout
        max_idle_conns = 0 // Max idle connections
        max_idle_conns_per_host = 100 // Max idle connections per host
        keepalive_timeout_in_secs = 30 // Keepalive timeout
        host = "https://tagging_service.net/DataService" // Tagging service endpoint
    }

    group_service {
        cache_enabled = true // Enable caching for group service
        cache_expire_after_access_in_mins = 240 // Cache expiry time after access
        cache_refresh_after_write_in_mins = 240 // Cache refresh time after write
        retries = 0 // Number of retry attempts
        retry_in_msecs = 100 // Milliseconds between retries
        connect_timeout_in_secs = 2 // Connection timeout
        read_timeout_in_secs = 142 // Read timeout
        max_idle_conns = 0 // Max idle connections
        max_idle_conns_per_host = 100 // Max idle connections per host
        keepalive_timeout_in_secs = 30 // Keepalive timeout
        host = "https://group_service_testing.net" // Group service endpoint
    }

    group_sync_service {
        retries = 0 // Number of retry attempts
        retry_in_msecs = 100 // Milliseconds between retries
        connect_timeout_in_secs = 2 // Connection timeout
        read_timeout_in_secs = 30 // Read timeout
        max_idle_conns_per_host = 100 // Max idle connections per host
        keepalive_timeout_in_secs = 30 // Keepalive timeout
        host = "https://group_sync_service_testing.net" // Group sync service endpoint
        path = "/v2/grouping" // API path for group sync
        security_token_path = "/v2/secure" // API path for security token
    }

    sat {
        SAT_REFRESH_FREQUENCY_IN_HOUR = 6 // SAT refresh frequency in hours
        SAT_REFRESH_BUFFER_IN_MINS = 15 // SAT refresh buffer in minutes
    }

    xconf {
        sat_service_name = sat_service // Reference to SAT service config
        account_service_name = account_service // Reference to account service config
        device_service_name = device_service // Reference to device service config
        tagging_service_name = tagging_service // Reference to tagging service config
        group_service_name= group_service // Reference to group service config
        group_sync_service_name = group_sync_service // Reference to group sync service config
        derive_application_type_from_partner_id = true // Derive app type from partner ID
        partner_application_types = [ "" ] // List of partner application types
        enable_fw_penetration_metrics = false // Enable firmware penetration metrics
        enable_rfc_penetration_metrics = false // Enable RFC penetration metrics
        enable_device_service = false // Enable device service integration
        enable_account_service = false // Enable account service integration
        enable_tagging_service = false // Enable tagging service integration
        enable_device_db_lookup = false // Enable device DB lookup
        enable_group_service = false // Enable group service integration
        enable_ft_xdp_groups = false // Enable XDP groups feature toggle
        enable_ft_mac_tags = false // Enable MAC tags feature toggle
        enable_ft_account_tags = false // Enable account tags feature toggle
        enable_ft_partner_tags = false // Enable partner tags feature toggle
        enable_mac_accountservice_call = false // Enable MAC account service call
        account_service_mac_prefix = "" // MAC prefix for account service
        enable_tagging_service_rfc = false // Enable tagging service for RFC
        enable_fw_download_logs = true // Enable firmware download logs
        enable_rfc_precook = false // Enable RFC precook feature
        enable_rfc_precook_304 = false // Enable RFC precook 304 status
        enable_rfc_precook_for_offered_fw = false // Enable RFC precook for offered firmware
        ipv4_network_mask_prefix_length = 24 // IPv4 network mask prefix length
        ipv6_network_mask_prefix_length = 64 // IPv6 network mask prefix length
        rfc_precook_time_zone = "America/New_York" // Time zone for RFC precook
        rfc_precook_time_format = "15:04" // Time format for RFC precook
        rfc_precook_start_time = "18:00" // RFC precook start time
        rfc_precook_end_time = "06:00" // RFC precook end time
        group_service_model_list = "" // List of models for group service
        group_prefix = "" // Prefix for group names
        mac_tags_model_list = "" // List of models for MAC tags
        account_tags_model_list = "" // List of models for account tags
        partner_tags_model_list = "" // List of models for partner tags
        mac_tags_prefix_list = "t_" // Prefix list for MAC tags
        account_tags_prefix_list = "t_;p_" // Prefix list for account tags
        partner_tags_prefix_list = "t_" // Prefix list for partner tags
        return_account_id = true // Return account ID in responses
        return_account_hash = true // Return account hash in responses
        estb_recovery_firmware_versions = ".* .*" // Regex for recovery firmware versions
        dataservice_enabled = true // Enable data service
        adminservice_enabled = true // Enable admin service
        cache_tickDuration = 60000 // Cache tick duration in ms
        cache_retryCountUntilFullRefresh = 10 // Cache retry count until full refresh
        cache_changedKeysTimeWindowSize = 900000 // Cache changed keys time window size in ms
        cache_reloadCacheEntries = false // Enable cache reload for entries
        cache_reloadCacheEntriesTimeout = 1 // Cache reload timeout
        cache_reloadCacheEntriesTimeUnit = "DAYS" // Cache reload time unit
        cache_numberOfEntriesToProcessSequentially = 10000 // Number of cache entries to process sequentially
        cache_keysetChunkSizeForMassCacheLoad = 500 // Chunk size for mass cache load
        cache_update_window_size = 60000 // Cache update window size in ms
        cache_clone_data_enabled = false // Enable cache clone data
        ipaddr_shorthand_parsing_enabled = true // Enable shorthand IP parsing
        evaluator_nslist_loading_cache_enabled = false // Enable evaluator NS list cache
        application_cache_enabled = false // Enable application cache
        metrics_model_requests_counter_enabled = true // Enable metrics for model requests
        metrics_allowed_model_labels = "" // Allowed model labels for metrics
        security_token_key = "$SECURITY_TOKEN_KEY" // Security token key (from env)
        security_token_manager_enabled = false // Enable security token manager
        skip_security_token_client_protocol_set = "mtls;mtls-recovery" // Protocols to skip for security token client
        security_token_model_set = "" // Model set for security token
        security_token_device_percent_enabled = false // Enable device percent for security token
        security_token_device_percent_value = 100 // Device percent value for security token
        security_token_group_service_enabled = false // Enable group service for security token
        auxiliary_extensions = "additionalFw:.bin;remCtrl:.tgz" // Auxiliary file extensions
        rfc_return_country_code = true // Return country code in RFC responses
        rfc_country_code_model_list = "" // Model list for country code in RFC
        rfc_country_code_partner_list = "" // Partner list for country code in RFC

        loguploader_ssr_token_paths = {
            "cgi-bin/s3.cgi": false // Enable SSR token for log uploader path
        }

        firmware_ssr_token_paths = {
            "cgi-bin/test-sign-redirect.pl": false // Enable SSR token for firmware path
        }

        loguploader_ssr_token_host_keywords = {
            "ssr": false // Enable SSR token for log uploader host keyword
        }

        firmware_ssr_token_host_keywords = {
            "ssr": false // Enable SSR token for firmware host keyword
        }

        last_estb_ip_source = "" // Source for last ESTB IP

        partner_id_validation_enabled = true // Enable partner ID validation
        valid_partner_id_regex = "^[A-Za-z0-9_.\\-,:;]{3,32}$" // Regex for valid partner IDs
    }

    http_client {
        ca_comodo_cert_file= "/etc/testpath/test_cert.crt" // CA certificate file path
        cert_file = "/etc/testpath/test.pem" // Client certificate file path
        private_key_file = "/etc/testpath/test_client.pem" // Client private key file path
    }

    database {
        hosts = [
            "127.0.0.1"
        ] // List of Cassandra DB hosts
        keyspace = "ApplicationsDiscoveryDataService" // Main Cassandra keyspace
        test_keyspace = "test_appds" // Test keyspace for Cassandra
        device_keyspace = "odp" // Device keyspace for Cassandra
        device_test_keyspace = "odp_test_keyspace" // Device test keyspace
        device_pod_table_name = "test_account" // Table name for device pod
        xpc_keyspace = "test" // XPC keyspace
        xpc_test_keyspace = "test_keyspace" // XPC test keyspace
        xpc_precook_table_name = "reference_document" // Table name for XPC precook
        xconf_recooking_status_table_name = "RecookingStatus" // Table name for recooking status
        protocolversion = 4 // Cassandra protocol version
        xconf_test_keyspace = "test_appds" // XConf test keyspace
        user = "$DATABASE_USER" // Cassandra DB username
        password = "$DATABASE_PASSWORD" // Cassandra DB password
        // use password OR encrypted_password for Cassandra creds
        // encrypted_password = "$DATABASE_ENCRYPTED_PASSWORD" // Cassandra encrypted password
        is_ssl_enabled = false // Enable SSL for Cassandra connection
        timeout_in_sec = 5 // Cassandra query timeout
        connect_timeout_in_sec = 5 // Cassandra connection timeout
        concurrent_queries = 5 // Number of concurrent queries
        connections = 5 // Number of DB connections
        local_dc = "" // Local datacenter name
    }

    misc {
        // Stuff that does not fall into any of the categories above
        use_map_for_evaluators = false // Use map for evaluator lookup instead of array
    }
}
