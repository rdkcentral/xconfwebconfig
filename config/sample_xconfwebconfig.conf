xconfwebconfig {
    // build info
    code_git_commit = "2ac7ff4"
    build_time = "Thu Feb 14 01:57:26 2019 UTC"
    token_api_enabled = true
    ProjectName = "xconfwebconfig-dataservice"
    ProjectVersion = "3.6.6-SNAPSHOT"
    ServiceName = "N/A"
    ServiceVersion = "N/A"
    Source = "N/A"
    Rev = "N/A"
    GitBranch = "develop"
    GitBuildTime = "6/2/2021 4:16 PM"
    GitCommitId = "18f6608a1a8135d719336d09d05c296d4f5e655b"
    GitCommitTime = "Tue May 18 16:26:18 2021 +0000"

    tracing {
        moracide_tag_prefix = "X-Cl-Experiment"
        otel {
            enabled = true
            endpoint = "127.0.0.1:4318"
            operation_name = "http.request"
            // Allowed values; noop, stdout and http
            // provider=http will push it to the endpoint
            // otel collector should be running at the endpoint
            provider = "http"
        }
    }

    server {
        port = 9000
        read_timeout_in_secs = 5
        write_timeout_in_secs = 50
        metrics_enabled = true
    }

    log {
        level = "debug"
        format = "text"
        file = ""
    }

    sat_service {
        retries = 3
        retry_in_msecs = 100
        connect_timeout_in_secs = 4
        read_timeout_in_secs = 141
        max_idle_conns = 0
        max_idle_conns_per_host = 100
        keepalive_timeout_in_secs = 30
        host = "https://sat_service.net"
        client_id = "$SAT_CLIENT_ID"
        client_secret = "$SAT_CLIENT_SECRET"
    }
    
    sat_consumer {
        consumer_host = "https://sat_service_validation.net"  
    }

    device_service {
        retries = 0
        retry_in_msecs = 100
        connect_timeout_in_secs = 2
        read_timeout_in_secs = 142
        max_idle_conns = 0
        max_idle_conns_per_host = 100
        keepalive_timeout_in_secs = 30
        host = "https://device_service.net"
    }

    account_service {
        retries = 0
        retry_in_msecs = 100
        connect_timeout_in_secs = 2
        read_timeout_in_secs = 142
        max_idle_conns = 0
        max_idle_conns_per_host = 100
        keepalive_timeout_in_secs = 30
        host = "https://account_service.net"
    }

    tagging_service {
        retries = 0
        retry_in_msecs = 100
        connect_timeout_in_secs = 2
        read_timeout_in_secs = 142
        max_idle_conns = 0
        max_idle_conns_per_host = 100
        keepalive_timeout_in_secs = 30
        host = "https://tagging_service.net/DataService"
    }

    group_service {
        cache_enabled = true
        cache_expire_after_access_in_mins = 240
        cache_refresh_after_write_in_mins = 240
        retries = 0
        retry_in_msecs = 100
        connect_timeout_in_secs = 2
        read_timeout_in_secs = 142
        max_idle_conns = 0
        max_idle_conns_per_host = 100
        keepalive_timeout_in_secs = 30
        host = "https://group_service_testing.net"
    }

    group_sync_service {
        retries = 0
        retry_in_msecs = 100
        connect_timeout_in_secs = 2
        read_timeout_in_secs = 30
        max_idle_conns_per_host = 100
        keepalive_timeout_in_secs = 30
        host = "https://group_sync_service_testing.net"
        path = "/v2/grouping"
        security_token_path = "/v2/secure"
    }

    sat {
        SAT_REFRESH_FREQUENCY_IN_HOUR = 6
        SAT_REFRESH_BUFFER_IN_MINS = 15
    }

    xconf {
        sat_service_name = sat_service
        account_service_name = account_service
        device_service_name = device_service
        tagging_service_name = tagging_service
        group_service_name= group_service
        group_sync_service_name = group_sync_service
        derive_application_type_from_partner_id = true
        partner_application_types = [
            ""
        ]
        enable_fw_penetration_metrics = false
        enable_rfc_penetration_metrics = false
        enable_device_service = false
        enable_account_service = false
        enable_tagging_service = false
        enable_device_db_lookup = false
        enable_group_service = false
        enable_ft_xdp_groups = false
        enable_ft_mac_tags = false
        enable_ft_account_tags = false
        enable_ft_partner_tags = false
        enable_mac_accountservice_call = false
        account_service_mac_prefix = ""
        enable_tagging_service_rfc = false
        enable_fw_download_logs = true
        enable_rfc_precook = false
        enable_rfc_precook_304 = false
        enable_rfc_precook_for_offered_fw = false
        ipv4_network_mask_prefix_length = 24
        ipv6_network_mask_prefix_length = 64
        rfc_precook_time_zone = "America/New_York"
        rfc_precook_time_format = "15:04"
        rfc_precook_start_time = "18:00"
        rfc_precook_end_time = "06:00"
        group_service_model_list = ""
        group_prefix = ""
        mac_tags_model_list = ""
        account_tags_model_list = ""
        partner_tags_model_list = ""
        mac_tags_prefix_list = "t_"
        account_tags_prefix_list = "t_;p_"
        partner_tags_prefix_list = "t_"
        return_account_id = true
        return_account_hash = true
        estb_recovery_firmware_versions = ".* .*"
        dataservice_enabled = true
        adminservice_enabled = true
        cache_tickDuration = 60000
        cache_retryCountUntilFullRefresh = 10
        cache_changedKeysTimeWindowSize = 900000
        cache_reloadCacheEntries = false
        cache_reloadCacheEntriesTimeout = 1
        cache_reloadCacheEntriesTimeUnit = "DAYS"
        cache_numberOfEntriesToProcessSequentially = 10000
        cache_keysetChunkSizeForMassCacheLoad = 500
        cache_update_window_size = 60000
        cache_clone_data_enabled = false
        ipaddr_shorthand_parsing_enabled = true
        evaluator_nslist_loading_cache_enabled = false
        application_cache_enabled = false
        metrics_model_requests_counter_enabled = true
        metrics_allowed_model_labels = ""
        security_token_key = "$SECURITY_TOKEN_KEY"
        security_token_manager_enabled = false
        skip_security_token_client_protocol_set = "mtls;mtls-recovery"
        security_token_model_set = ""
        security_token_device_percent_enabled = false
        security_token_device_percent_value = 100
        security_token_group_service_enabled = false
        auxiliary_extensions = "additionalFw:.bin;remCtrl:.tgz"
        rfc_return_country_code = true
        rfc_country_code_model_list = ""
        rfc_country_code_partner_list = ""

        loguploader_ssr_token_paths = {
            "cgi-bin/s3.cgi": false
        }

        firmware_ssr_token_paths = {
            "cgi-bin/test-sign-redirect.pl": false
        }

        loguploader_ssr_token_host_keywords = {
            "ssr": false
        }

        firmware_ssr_token_host_keywords = {
            "ssr": false
        }

        last_estb_ip_source = ""

        partner_id_validation_enabled = true
        valid_partner_id_regex = "^[A-Za-z0-9_.\\-,:;]{3,32}$"
    }

    http_client {
        ca_comodo_cert_file= "/etc/testpath/test_cert.crt" 
        cert_file = "/etc/testpath/test.pem"
        private_key_file = "/etc/testpath/test_client.pem"
    }

    database {
        hosts = [
            "127.0.0.1"
        ]
        keyspace = "ApplicationsDiscoveryDataService"
        test_keyspace = "test_appds"
        device_keyspace = "odp"
        device_test_keyspace = "odp_test_keyspace"
        device_pod_table_name = "test_account"
        xpc_keyspace = "test"
        xpc_test_keyspace = "test_keyspace"
        xpc_precook_table_name = "reference_document"
        xconf_recooking_status_table_name = "RecookingStatus"
        protocolversion = 4
        xconf_test_keyspace = "test_appds"
        user = "$DATABASE_USER"
        password = "$DATABASE_PASSWORD"
        // use password OR encrypted_password for Cassandra creds
        // encrypted_password = "$DATABASE_ENCRYPTED_PASSWORD"
        is_ssl_enabled = false
        timeout_in_sec = 5
        connect_timeout_in_sec = 5
        concurrent_queries = 5
        connections = 5
        local_dc = ""
    }

    misc {
        // Stuff that does not fall into any of the categories above
        // This flag will use a map to find the evaluator instead of an array
        use_map_for_evaluators = false
    }
}
